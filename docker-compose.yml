version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: compose-mysql
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: compose-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: compose-redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=redis
      - HTTP_PASSWORD=redis123
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`${HOST_REDIS}`)"
      - "traefik.http.services.redis.loadbalancer.server.port=8081"

  adminer:
    image: adminer:latest
    container_name: compose-adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`${HOST_ADMINER}`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

  backend:
    build: ./backend
    container_name: backend
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${HOST_BACKEND}`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  frontend:
    build: ./frontend
    container_name: frontend
    env_file: .env
    environment:
      HOST_FRONTEND: ${HOST_FRONTEND}
      HOST_BACKEND: ${HOST_BACKEND}
    depends_on:
      - backend
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${HOST_FRONTEND}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  traefik:
    image: traefik:v2.9
    container_name: compose-traefik
    ports:
      - "80:80"
      - "443:443"
      - "8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"

volumes:
  local_db_data:
  redis_data: